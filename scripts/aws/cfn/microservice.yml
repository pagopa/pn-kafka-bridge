AWSTemplateFormatVersion: 2010-09-09
Description: 'Example microservice deploy'

Transform:
  - UpdateDeploymentTransform

Parameters:
  ProjectName:
    Type: String
    Description: 'Usually pn can be pnXYZ where XYZ are the feature number, useful to create
      experimental environments without crash official development environment'

  KafkaOnboardingTopicName:
    Type: String
    Description: 'Kafka topic name for onboarding institutions'
    Default: 'sc-contracts'

  KafkaOnboardingGroupId:
    Type: String
    Description: 'Kafka group id for onboarding institutions'
    Default: ''

  KafkaOnboardingBootstrapServers:
    Type: String
    Description: 'Kafka bootstrap servers'
    Default: ''

  SelfcarePnProductId:
    Type: String
    Description: 'Selfcare product id'

  KafkaBridgeOnboardingQueueName:
    Type: String
    Description: 'Queue name of Kafka bridge messages for onboarding institutes'

  KafkaBridgeOnboardingQueueARN:
    Type: String
    Description: 'Queue ARN of Kafka bridge messages for onboarding institutes'

  KafkaBridgeOnboardingQueueAlarmARN:
    Type: String
    Description: 'pn-kafka-bridge onboarding institutes queue alarm ARN'

  KafkaBridgeOnboardingQueueAgeAlarmARN:
    Type: String
    Description: pn-kafka-bridge onboarding institute queue age alarm ARN

  AlarmSNSTopicArn:
    Type: String
    Description: 'ARN of alarm topic'

  ECSClusterName:
    Type: String
    Description: 'The name of the ECS cluster where the microservice is going to be deployed'

  SubnetsIds:
    Type: String
    Description: 'subnets ids comma separated list. Where to deploy the microservice'

  VpcId:
    Type: String
    Description: 'VpcId where the microservice is going to be deployed'

  EcsDefaultSecurityGroup:
    Type: String
    Description: 'Default security group required by infrastructure'

  LogsKinesisSourceStreamArn:
    Type: String
    Description: 'Kinesis stream that receive logs'

Resources:

  # PN-Kafka-Bridge microservice
  KafkaBridgeMicroservice:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/ecs-service.yaml"
      Parameters:
        MicroServiceUniqueName: !Sub '${ProjectName}-kafka-bridge'
        CpuValue: 1024
        MemoryAmount: 2GB
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn
        ContainerImageURI: !Sub '${ContainerImageUri}'
        ContainerEnvEntry1: !Sub 'AWS_REGIONCODE=${AWS::Region}'
        ContainerEnvEntry2: !Sub 'CORS_ALLOWED_DOMAINS=${CorsAllowedDomains}'
        ContainerEnvEntry3: !Sub 'PN_KAFKA_BRIDGE_KAFKA_ONBOARDING_TOPIC_NAME=${KafkaOnboardingTopicName}'
        ContainerEnvEntry4: !Sub 'PN_KAFKA_BRIDGE_KAFKA_ONBOARDING_GROUP_ID=${KafkaOnboardingGroupId}'
        ContainerEnvEntry5: !Sub 'SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=${KafkaOnboardingBootstrapServers}'
        ContainerEnvEntry6: !Sub 'KAFKA_ONBOARDING_SASL_JAAS_PASSWORD={{resolve:secretsmanager:${ProjectName}-KafkaBridge-Secrets:SecretString:KafkaOnboardingSaslJaasConfig}}'
        ContainerEnvEntry7: !Sub 'PN_KAFKA_BRIDGE_SELFCARE_PN_PRODUCT_ID=${SelfcarePnProductId}'
        ContainerEnvEntry8: !Sub 'PN_KAFKA_BRIDGE_SQS_TOPICS_ONBOARDING_INPUT=${KafkaBridgeOnboardingQueueName}'
        ECSClusterName: !Ref ECSClusterName
        Subnets: !Ref SubnetsIds
        VpcId: !Ref VpcId
        EcsDefaultSecurityGroup: !Ref EcsDefaultSecurityGroup
        TaskRoleManagedPolicyArn: !Ref KafkaBridgeMicroserviceTaskManagedPolicy
        CloudwatchLogKinesisStreamArn: !Ref LogsKinesisSourceStreamArn


  KafkaBridgeMicroserviceTaskManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sqs:ChangeMessageVisibility
              - sqs:ChangeMessageVisibilityBatch
              - sqs:DeleteMessage
              - sqs:DeleteMessageBatch
              - sqs:GetQueueAttributes
              - sqs:GetQueueUrl
              - sqs:ReceiveMessage
              - sqs:SendMessage
              - sqs:SendMessageBatch
            Resource:
              - !Ref KafkaBridgeOnboardingQueueARN

  ## Dashboard
  KafkaBridgeMicroserviceCloudWatchDashboard:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/microservice-cloudwatch-dashboard.yaml"
      Parameters:
        DashboardName: !Sub "${ProjectName}-kafka-bridge"
        AlarmArns: !Join
          - ','
          - - !GetAtt KafkaBridgeMicroservice.Outputs.FatalLogsMetricAlarmArn
            - !Ref KafkaBridgeOnboardingQueueAlarmARN
            - !Ref KafkaBridgeOnboardingQueueAgeAlarmARN
        QueueArns: !Join
          - ','
          - - !Ref KafkaBridgeOnboardingQueueARN


Outputs:
  Version:
    Description: Git commit id of this file
    Value: !Ref Version
